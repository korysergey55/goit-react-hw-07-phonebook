{"version":3,"sources":["components/sectipon/Section.module.css","components/sectipon/Section.js","redux/contactForm/contactFormActions.js","components/contactList/ContactList.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/App.js","redux/contactForm/contactFormReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["module","exports","Section","title","children","className","styles","sectionTitle","defaultProps","submitNewContact","createAction","handleDelete","filterContacts","getNormolizeContacts","state","formattedContacts","contacts","filter","toLowerCase","trim","items","contact","name","includes","mapDispatchToProps","connect","ownProps","mainContainer","map","newContact","newContactName","number","type","btn","onClick","id","ContactForm","saveInputValueToState","evt","setState","target","value","handleSubmitForm","preventDefault","findDuplicate","props","uuid","resetForm","isDublicate","some","alert","mainForm","onSubmit","this","inputContainer","labelName","onChange","inputName","pattern","required","placeholder","buttonAddContact","Component","htmlFor","App","itemsReducer","createReducer","action","payload","filterItemsReducer","_","contactFormCartReduser","combineReducers","rootReducer","contactFormReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69db49e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__Df71a\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n return (\r\n  <section>\r\n   <h2 className={styles.sectionTitle}>{title}</h2>\r\n   {children}\r\n  </section>\r\n );\r\n};\r\n\r\nSection.defaultProps = {\r\n title: \"\",\r\n};\r\n\r\n Section.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n };\r\nexport default Section;\r\n","//============================= Redux ================================\r\n// const SUBMIT_NEW_CONTACT = \"contact/submitNewContact\";\r\n// const HANDLE_DELETE = \"contact/handleDelete\";\r\n// const FILTER = \"contact/filter\";\r\n\r\n// export { SUBMIT_NEW_CONTACT, HANDLE_DELETE, FILTER };\r\n\r\n// const submitNewContact = (data) => ({\r\n//  type: SUBMIT_NEW_CONTACT,\r\n//  payload: data,\r\n// });\r\n\r\n// const handleDelete = (id) => ({\r\n//  type: HANDLE_DELETE,\r\n//  payload: id,\r\n// });\r\n\r\n// const filterContacts = (evt) => ({\r\n//  type: FILTER,\r\n//  payload: evt,\r\n// });\r\n\r\n// export { submitNewContact, handleDelete, filterContacts };\r\n\r\n//============================= Redux Toolkit ================================\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst submitNewContact = createAction(\"contact/submitNewContact\");\r\nconst handleDelete = createAction(\"contact/handleDelete\");\r\nconst filterContacts = createAction(\"contact/filter\");\r\n\r\nexport { submitNewContact, handleDelete, filterContacts };","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleDelete } from \"../../redux/contactForm/contactFormActions\";\r\n\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <ul>\r\n    {contacts.map((contact) => (\r\n     <li className={styles.newContact} key={contact.id}>\r\n      <p className={styles.newContactName}>\r\n       {contact.name} : {contact.number}\r\n      </p>\r\n      <button\r\n       type=\"button\"\r\n       className={styles.btn}\r\n       onClick={() => handleDelete(contact.id)}\r\n      >\r\n       Delete\r\n      </button>\r\n     </li>\r\n    ))}\r\n   </ul>\r\n  </div>\r\n );\r\n};\r\n\r\nContactList.propTypes = {\r\n filteredContacts: PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n   id: PropTypes.string.isRequired,\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n  })\r\n ),\r\n handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getNormolizeContacts = (state) => {\r\n const formattedContacts = state.contacts.filter.toLowerCase().trim();\r\n const filteredContacts = state.contacts.items.filter((contact) =>\r\n  contact.name.toLowerCase().includes(formattedContacts)\r\n );\r\n return filteredContacts;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: getNormolizeContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n handleDelete,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitNewContact } from \"../../redux/contactForm/contactFormActions\";\r\n\r\nclass ContactForm extends Component {\r\n static propTypes = {\r\n  submitNewContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n };\r\n\r\n state = {\r\n  name: \"\",\r\n  number: \"\",\r\n };\r\n\r\n saveInputValueToState = (evt) => {\r\n  this.setState({\r\n   [evt.target.name]: evt.target.value,\r\n  });\r\n };\r\n\r\n handleSubmitForm = (evt) => {\r\n  evt.preventDefault();\r\n\r\n  if (this.findDuplicate(this.state.name)) {\r\n   this.props.submitNewContact({ ...this.state, id: uuid() });\r\n   this.resetForm();\r\n  }\r\n };\r\n\r\n resetForm = () => {\r\n  this.setState({ name: \"\", number: \"\" });\r\n };\r\n\r\n findDuplicate = (newContactName) => {\r\n\r\n  const isDublicate = this.props.contacts.some(\r\n   (contact) => contact.name === newContactName\r\n  );\r\n  \r\n  if (!newContactName) {\r\n   alert(\"The field cannot be empty!\");\r\n   return false;\r\n  }\r\n\r\n  if (isDublicate) {\r\n   alert(\"This Name already exist!\" + newContactName);\r\n   return false;\r\n  }\r\n  return true;\r\n };\r\n\r\n render() {\r\n   \r\n  return (\r\n   <>\r\n    <form className={styles.mainForm} onSubmit={this.handleSubmitForm}>\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Name</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"text\"\r\n       name=\"name\"\r\n       className={styles.inputName}\r\n       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n       placeholder=\"Enter Name\"\r\n      ></input>\r\n     </div>\r\n\r\n     <div className={styles.inputContainer}>\r\n      <label className={styles.labelName}>Number</label>\r\n      <input\r\n       onChange={this.saveInputValueToState}\r\n       type=\"tel\"\r\n       name=\"number\"\r\n       className={styles.inputName}\r\n       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n       required\r\n      />\r\n     </div>\r\n     <button type=\"submit\" className={styles.buttonAddContact}>\r\n      Add contact\r\n     </button>\r\n    </form>\r\n   </>\r\n  );\r\n }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n submitNewContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contactForm/contactFormActions\";\r\n\r\nconst Filter = ({ filter, filterContacts }) => {\r\n return (\r\n  <div className={styles.mainContainer}>\r\n   <div className={styles.inputContainer}>\r\n    <label className={styles.labelName} htmlFor=\"filter\">\r\n     Find contact by name\r\n    </label>\r\n    <input\r\n     onChange={filterContacts}\r\n     type=\"text\"\r\n     name=\"filter\"\r\n     id=\"filter\"\r\n     value={filter}\r\n     className={styles.inputName}\r\n    ></input>\r\n   </div>\r\n  </div>\r\n );\r\n};\r\n\r\nFilter.propTypes = {\r\n filter: PropTypes.string,\r\n filterContacts: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n filterContacts: (evt) => filterContacts(evt.target.value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Section from \"./sectipon/Section\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nconst App = () => {\r\n //  componentDidMount() {\r\n //   const items = localStorage.getItem(\"contacts\");\r\n //   if (items) {\r\n //    const parsedContacts = JSON.parse(items);\r\n //    this.setState({ contacts: parsedContacts });\r\n //   }\r\n //  }\r\n\r\n //  componentDidUpdate(prevProps, prevState) {\r\n //   if (prevState.contacts !== this.state.contacts) {\r\n //    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n //   }\r\n //  }\r\n\r\n return (\r\n  <>\r\n   <Section title={\"Phonebook\"}>\r\n    <ContactForm />\r\n   </Section>\r\n\r\n   <Section title={\"Contacts\"}>\r\n    <Filter />\r\n\r\n    <ContactList />\r\n   </Section>\r\n  </>\r\n );\r\n};\r\nexport default App;\r\n","//============================= Redux ================================\r\n// import { combineReducers } from \"redux\";\r\n// import { SUBMIT_NEW_CONTACT, HANDLE_DELETE, FILTER } from \"./contactFormActions\";\r\n\r\n// const itemsReducer = (\r\n//  state = [\r\n//  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//  ],\r\n//  action\r\n// ) => {\r\n//  switch (action.type) {\r\n//   case SUBMIT_NEW_CONTACT:\r\n//    return [...state, action.payload];\r\n\r\n//   case HANDLE_DELETE:\r\n//    return state.filter((contact) => contact.id !== action.payload);\r\n\r\n//   default:\r\n//    return state;\r\n//  }\r\n// };\r\n// const filterReducer = (state = '', action) => {\r\n//  switch (action.type) {\r\n//   case FILTER:\r\n//      return action.payload ;\r\n\r\n//   default:\r\n//     return state;\r\n//  }\r\n// }\r\n// const errorReduser = (state = \"\", action) => {\r\n//  return state;\r\n// };\r\n// const contactFormCartReduser = combineReducers({\r\n//  items: itemsReducer,\r\n//  error: errorReduser,\r\n//  filter: filterReducer,\r\n// });\r\n// export default contactFormCartReduser;\r\n\r\n//============================= Redux Toolkit ================================\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { submitNewContact, handleDelete, filterContacts,} from \"./contactFormActions\";\r\n\r\nconst itemsReducer = createReducer(\r\n [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n ],\r\n {\r\n  [submitNewContact]: (state, action) => [...state, action.payload],\r\n  [handleDelete]: (state, action) =>\r\n   state.filter((contact) => contact.id !== action.payload),\r\n }\r\n);\r\n\r\nconst filterItemsReducer = createReducer(\"\", {\r\n [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactFormCartReduser = combineReducers({\r\n items: itemsReducer,\r\n filter: filterItemsReducer,\r\n});\r\n\r\nexport default contactFormCartReduser;\r\n","import {combineReducers} from 'redux';\r\nimport contactFormReducer from '../redux/contactForm/contactFormReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n contacts: contactFormReducer,\r\n });\r\n\r\nexport default rootReducer;\r\n","//============================= Redux ================================\r\n\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./rootReducer\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// export default store;\r\n\r\n//============================= Redux Toolkit ================================\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"modern-normalize/modern-normalize.css\";\nimport './index.css';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n <React.StrictMode>\n  <Provider store={store}>\n   <App />\n  </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"ContactForm_mainForm___C6vk\",\"inputContainer\":\"ContactForm_inputContainer__jkdk-\",\"labelName\":\"ContactForm_labelName__KCFkK\",\"inputName\":\"ContactForm_inputName__188Ek\",\"buttonAddContact\":\"ContactForm_buttonAddContact___KSxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ContactList_mainContainer__2WA5R\",\"newContact\":\"ContactList_newContact__3KuVQ\",\"newContactName\":\"ContactList_newContactName__GQ9hs\",\"btn\":\"ContactList_btn__3AhZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Filter_mainContainer__13O_e\",\"inputContainer\":\"Filter_inputContainer__2PBwa\",\"labelName\":\"Filter_labelName__1lAfG\",\"inputName\":\"Filter_inputName__3MYHH\",\"buttonAddContact\":\"Filter_buttonAddContact__2gTW1\"};"],"sourceRoot":""}